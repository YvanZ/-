input{
    redis{
        host=>"127.0.0.1"
        password=>"foobar"
        data_type=>"list"
        key=>"logstash"
        codec=>"json"
        threads => 4
        batch_count => 1000
    }
    redis{
        host=>"127.0.0.1"
        password=>"foobar"
        data_type=>"list"
        key=>"filebeat"
        codec=>"json"
        threads => 4
        batch_count => 1000
    }
}

filter{
    if "nginx-access" in [log-type]  {
        grok {
            match => [
                "message","%{IPORHOST:remote_addr} (%{USER:auth}|-) (%{USER:ident}|-) \[%{HTTPDATE:logdate}\] \"(?:%{WORD:method} (%{URIPATHPARAM:request}|-)(?: HTTP/%{NUMBER:http_version})?|-)\" ((?<domain>[\w\W,]+?)|-) (%{NUMBER:status}|-) (?:%{NUMBER:body_bytes_sent}|-) \"(%{NOTSPACE:http_referer}|-)\" \"(%{GREEDYDATA:http_x_forwarded_for}|-)\" \"((?<upstream_addr>[\w\W,]+?)|-)\" \"(?<upstream_status>([0-9, ]+?)|-)\" (%{WORD:upstream_cache_status}|-) \"(?<upstream_content_type>([\w\W]+?)|-)\" \"(?<upstream_response_time>([0-9,. ]+?)|-)\" > (%{BASE16FLOAT:request_time:float}) \"(?<agent>([\w\W]+?)|-)\""
            ]
            remove_field => ["message"]
        }
        geoip {
            source => "remote_addr"
            fields => [
              "city_name",
              "country_name",
              "latitude",
              "longitude",
              "location",
              "region_name"
            ]
            remove_field => [
              "[geoip][latitude]",
              "[geoip][longitude]"
            ]
        }
        date {
            match => ["logdate","dd/MMM/YYYY:HH:mm:ss Z"]
        }
    }

    if "mysql-slow" in [log-type] {
        grok {

        }
    }

    if "php-slow" in [log-type] {
        grok {
            match => [
                "message","^\[(?<logdate>(%{MONTHDAY}-%{MONTH}-%{YEAR} %{TIME}))\](?m)(?<slow_trace>.*)"
            ]
            remove_field => ["message"]
        }
        date {
            match => ["logdate","dd-MMM-YYYY HH:mm:ss"]
        }
    }

    mutate {
        remove_field => [
          "source",
          "offset",
          "[beat][version]"
        ]
    }

    grok{
        match => [
            "message","^%{TIMESTAMP_ISO8601:logdate_a}(?m).*%{IP:ping_destination}.*%{NUMBER:ping_lossp:float}%(?m).*%{NUMBER:ping_rttmin:float}/%{NUMBER:ping_rttavg:float}/%{NUMBER:ping_rttmax:float}/%{NUMBER:ping_rttmdev:float} ms",
            "message","^%{TIMESTAMP_ISO8601:logdate_a}(?m)(?<body_a>.*)",
            "message","^\[(?<logdate_c>(%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME}))\](?m)(?<body_c>.*)",
            "message","^(?<logdate_d>(%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{TIME}))(?m)(?<body_d>.*)"
        ]
        remove_field => ["message"]
    }
    date {
        match => ["logdate_a","ISO8601"]
    }
    date {
        match => ["logdate_c","YYYY-MM-dd HH:mm:ss"]
    }
    date {
        match => ["logdate_d","YYYY/MM/dd HH:mm:ss"]
    }

}

output {
    if "nginx-access" in [log-type] {
        elasticsearch {
            hosts => ["192.168.1.68","127.0.0.1"]
            index => "logstash-nginx-access-%{+YYYY.MM.dd.HH}"
            flush_size => 30000
            idle_flush_time => 10
            user => 'elastic'
            password => 'changeme'
        }
    }
    if "php-slow" in [log-type] {
        elasticsearch {
            hosts => ["192.168.1.68","127.0.0.1"]
            index => "logstash-php-slow-%{+YYYY.MM.dd.HH}"
            flush_size => 30000
            idle_flush_time => 10
            user => 'elastic'
            password => 'changeme'
        }
    }
}
